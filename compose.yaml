services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    build:
      context: .
      dockerfile: .docker/frankenphp/Dockerfile
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: udp
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  database:
    profiles: ["dev", "all"]
    build:
        context: .
        dockerfile: .docker/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: chronicle-keeper
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  database_test:
    profiles: ["test", "all"]
    build:
      context: .
      dockerfile: .docker/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: chronicle-keeper
    ports:
      - "5434:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

# Volumes needed for Caddy certificates and configuration
volumes:
  caddy_data:
  caddy_config:
  postgres_data:
  postgres_test_data:

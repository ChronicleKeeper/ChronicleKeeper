name: CI

on:
  pull_request: ~
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linting & Static Analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Setup Temporary Config
        run: cp .env.test.dist .env.test

      - uses: "ramsey/composer-install@v3"

      - name: Linting PHP
        run: |
          if find src -name "*.php" -exec php -l {} \; | grep -v "No syntax errors detected"; then exit 1; fi
          if find tests -name "*.php" -exec php -l {} \; | grep -v "No syntax errors detected"; then exit 1; fi

      - name: PHPCS Code Style Check
        run: vendor/bin/phpcs -n

      - name: PHPStan Static Analyses
        run: vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=-1

  tests-unit:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.4' ]
        coverage: [false]
        include:
          - php: '8.3'
            coverage: true
    name: Unit Tests PHP ${{ matrix.php }}
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - uses: shivammathur/setup-php@v2
          with:
            php-version: ${{ matrix.php }}

        - name: Setup Temporary Config
          run: cp .env.test.dist .env.test

        - uses: "ramsey/composer-install@v3"

        - name: PHPUnit
          run: php vendor/bin/phpunit --group small --group medium

        - name: PHPUnit with Coverage
          if: matrix.coverage
          run: XDEBUG_MODE=coverage php vendor/bin/phpunit --group small --group medium --coverage-clover=coverage-unit.xml

        - name: Upload Coverage
          if: matrix.coverage
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: coverage-unit.xml
            flags: unit-tests

  tests-pgsql:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.4' ]
        coverage: [false]
        include:
          - php: '8.3'
            coverage: true
    name: PGSql Tests PHP ${{ matrix.php }}

    services:
      postgres:
          image: pgvector/pgvector:pg15
          env:
              POSTGRES_USER: app
              POSTGRES_PASSWORD: app
              POSTGRES_DB: chronicle-keeper
          ports:
              - 5432:5432
          options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Setup Database Config
        run: |
          cp .env.test.dist .env.test
          echo "DATABASE_CONNECTION=pgsql:host=localhost;port=5432;dbname=chronicle-keeper;user=app;password=app" >> .env.test

      - uses: "ramsey/composer-install@v3"

      - name: PHPUnit
        run: php vendor/bin/phpunit --group large --group pgsql

      - name: PHPUnit with Coverage
        if: matrix.coverage
        run: XDEBUG_MODE=coverage php vendor/bin/phpunit --group large --group pgsql --coverage-clover=coverage-pgsql.xml

      - name: Upload Coverage
        if: matrix.coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage-pgsql.xml
          flags: pgsql-tests
